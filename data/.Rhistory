rm(list = ls())
library(genio)
library(MASS)
library(gaston)
library(OmicKriging)
set.seed(080318)
setwd("C:\\Users\\espenmei\\Development\\Julia\\VCModels\\data")
write_GRMBin2 <- function(X, famid, id, n.snps = 0.0, prefix, size = 4) {
sum_i <- function(i){
return(sum(1:i))
}
## file connections
NFileName <- paste(prefix,".grm.N.bin",sep="")
IDFileName <- paste(prefix,".grm.id",sep="")
BinFileName <- paste(prefix,".grm.bin",sep="")
## pull sample ids and dimension of GRM
#id <- rownames(X)
n <- length(id)
## pull diagonal elements
diag.elem <- diag(X)
## pull upper triangular elements (column major order)
off.diag.elem <- X[upper.tri(X, diag=FALSE)]
## collapse GRM into vector
i <- sapply(1:n, sum_i)
collapsed.grm <- vector(mode="numeric", length = n*(n+1)/2)
collapsed.grm[i] <- diag.elem
collapsed.grm[-i] <- off.diag.elem
## write binary files
BinFile <- file(BinFileName, "wb")
NFile <- file(NFileName, "wb")
writeBin(con = BinFile, collapsed.grm, size = size)
writeBin(con = NFile, rep(n.snps, n*(n+1)/2), size = size )
close(BinFile)
close(NFile)
## write sample ID file -- we are dropping sample family IDs here
write.table(cbind(famid, id), file = IDFileName, col.names=FALSE, row.names=FALSE, quote=FALSE)
}
K = 6000
M = 10000
P = runif(M, 0.1, 0.2)
var_g = matrix(c(3, 1, 1.5,
1, 4, 1.5,
1.5, 1.5, 5), 3, 3, byrow = T)
var_e = 6
# Sample genotypes
Xm_t = matrix(rbinom(K * M, 1, P), K, M, byrow = T)
Xm_n = matrix(rbinom(K * M, 1, P), K, M, byrow = T)
Xp_t = matrix(rbinom(K * M, 1, P), K, M, byrow = T)
Xp_n = matrix(rbinom(K * M, 1, P), K, M, byrow = T)
Xm = Xm_t + Xm_n
Xp = Xp_t + Xp_n
Xo = Xm_t + Xp_t
X = rbind(Xm, Xp, Xo)
# Simulate phenotypes
Zm = scale(Xm, 2 * P, sqrt(2 * P * (1 - P)))
Zp = scale(Xp, 2 * P, sqrt(2 * P * (1 - P)))
Zo = scale(Xo, 2 * P, sqrt(2 * P * (1 - P)))
L = cbind(1, matrix(rnorm(2 * K), K, 2))
u = mvrnorm(M, c(0, 0, 0), var_g / M)
e = rnorm(K, 0, sqrt(var_e))
y = L %*% c(2, 0.5, 1.7) + cbind(Zm, Zp, Zo) %*% c(u) + e
# Fix genetic data
# -----------------------------------------------------
# BIM
bim = make_bim(n = M)
#bim$chr = paste0("chr", bim$chr)
bim$chr = sample(1:22, M, replace = T)
# Make SNP IDs look like "rs" IDs
bim$id = paste0('rs', bim$id)
# Make positions 1000 bigger
bim$pos = bim$pos * 1000
# Select randomly between Cs and Gs for the reference alleles
bim$ref = sample(c("C", "G"), M, replace = T)
# Select randomly between As and Ts for the alternative alleles
bim$alt = sample(c("A", "T"), M, replace = T)
# FAM
# Specify the number of individuals
fam = make_fam(n = 3 * K)
fam$fam = rep(1:K, times = 3)
fam$id = paste0('id', fam$id)
fam$pat = c(rep(0, 2 * K), fam$id[(K + 1):(2 * K)])
fam$mat = c(rep(0, 2 * K), fam$id[1:K])
# Sex 1 = male, 2 = female
fam$sex = c(rep(2:1, each = K), sample(1:2, K, T))
# Phenotype missing for parents
fam$pheno = c(rep(-9, 2 * K), y)
# BED
Xt = t(X)
dimnames(Xt) = list(bim$id, fam$id)
# Write to file
sim = "simtrio"
write_bim(paste0(sim, "_M", M, "K", K), bim)
write_fam(paste0(sim, "_M", M, "K", K), fam)
write_bed(paste0(sim, "_M", M, "K", K), Xt)
# pheno
pheno = data.frame(fam = fam$fam, id = fam$id, pheno = fam$pheno)
#write.table(pheno, paste0(sim,  "_M", M, "K", K, ".pheno"), quote = F, sep = "\t", row.names = F, col.names = F)
# covar
covar = data.frame(fam$fam, fam$id, L[,-1])
write.table(covar, paste0(sim, "_M", M, "K", K, ".covar"), quote = F, sep = "\t", row.names = F, col.names = F)
# Multiple grms
trio = read.bed.matrix(paste0(sim, "_M", M, "K", K))
A = GRM(trio)
mid = 1:K
pid = (K + 1):(2 * K)
oid = (2 * K + 1):(3 * K)
Rs = list(Amm = A[mid, mid],
App = A[pid, pid],
Aoo = A[oid, oid],
Dpm = A[pid, mid] + A[mid, pid],
Dom = A[oid, mid] + A[mid, oid],
Dop = A[oid, pid] + A[pid, oid])
famid = fam$fam[oid]
id = fam$id[oid]
#for(i in 1:length(Rs)) {
#  write_GRMBin2(Rs[[i]], famid, id, M, paste0("GCTA/simtrio_grm_", names(Rs)[i], "_M", M, "K", K))
#}
#grmnames = paste0("simtrio_grm_", names(Rs), "_M", M, "K", K)
#write.table(grmnames, paste0("GCTA/grmnames", "_M", M, "K", K, ".txt"), quote = F, sep = "\t", row.names = F, col.names = F)
